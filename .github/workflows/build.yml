name: Build and Deploy to GitHub Pages

env:
  NODE_ENV: production
  NODE_VERSION: 18.12.1
  RUBY_VERSION: 3.0.0

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: "Cache: Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: "Cache: Setup up yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: "Cache: Setup bundler cache"
        uses: actions/cache@v3
        id: bundler-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: "Setup Nodejs"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: "Setup Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: "Setup dependencies"
        run: |
          yarn install --frozen-lockfile
          gem update --system --no-document
          gem update bundler --no-document
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: "Build site"
        run: |
          bundle exec jekyll build --verbose --trace

      - name: "Deploy to GitHub pages"
        run: |
          pushd _site &>/dev/null
          : > .nojekyll

          REMOTE_BRANCH="${REMOTE_BRANCH:-gh-pages}"
          REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

          echo "Deploying to ${REMOTE_REPO} on branch ${REMOTE_BRANCH}"

          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          git remote set-url origin "${REMOTE_REPO}"
          git checkout -B "${REMOTE_BRANCH}"
          git add .
          git commit -m "Deploy to GitHub Pages"
          git push origin "${REMOTE_BRANCH}"

          popd &>/dev/null
